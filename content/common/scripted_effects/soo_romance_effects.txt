#   This file is part of Sons of Odin.
#
#   Sons of Odin is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   Sons of Odin is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with Sons of Odin.  If not, see <https://www.gnu.org/licenses/>.

soo_handle_rape_victims_effect = {
    $LEADER$ = {
        save_scope_as = leader 
        every_knight = {
            limit = {
                is_at_location = scope:sacked_barony.title_province
                NOT = { has_trait = chaste }
            }
            add_to_list = available_knights
        }
    }

    random_in_list = {
        list = available_knights
        save_scope_as = knight 
        trigger_event = soo_raiding.0010
    }
}

soo_involuntary_handholding_effect = {
    save_temporary_scope_as = rapist
    $VICTIM$ = { save_scope_as = victim }
	custom_tooltip = soo_involuntary_handholding_effect.tt

    # Penalty malus 
    $VICTIM$ = {
        add_opinion = {
            target = scope:rapist
            modifier = soo_rape_victim_opinion
            opinion = -100
        }
        hidden_effect = {
            every_relation = {
                type = soulmate 
                add_opinion = {
                    target = scope:rapist
                    modifier = soo_raped_soulmate_opinion
                    opinion = -100
                }
            }
            every_consort = {
                add_opinion = {
                    target = scope:rapist
                    modifier = soo_raped_spouse_opinion
                    opinion = -100
                }
            }
            every_close_family_member = {
                add_opinion = {
                    target = scope:rapist
                    modifier = soo_raped_family_opinion
                    opinion = -100
                }
            }
            every_relation = {
                type = friend 
                add_opinion = {
                    target = scope:rapist
                    modifier = soo_raped_friend_opinion
                    opinion = -50
                }
            }
            every_relation = {
                type = lover 
                add_opinion = {
                    target = scope:rapist
                    modifier = soo_raped_lover_opinion
                    opinion = -50
                }
            }
        }
    }

    # TODO: Handle potential traits and outcomes

    # Resolve pregnancy
    # REMOVED: This doesn't work properly. Until the game is more flexible about pregnancies
    #          or allows a way of preventing the infidelity events we'll just have to forego
    #          the pregnancy risk.
    #hidden_effect = {
    #    if = {
    #        limit = {
    #            is_female = yes 
    #            $VICTIM$ = { is_male = yes }
    #        }
    #
    #        if = {
    #            limit = {
    #                is_pregnant = no 
    #                age < define:NChildbirth|MAX_FEMALE_REPRODUCTION_AGE
    #            }
    #            add_to_variable_list = {
    #                name = potential_father_variable_list 
    #                target = $VICTIM$
    #            }
    #            random = {
    #                chance = $PREGNANCY_CHANCE$
    #                make_pregnant = {
    #                    father = $VICTIM$ 
    #                }
    #            }
    #        }
    #    }
    #    else_if = {
    #        limit = {
    #            is_male = yes 
    #            $VICTIM$ = { is_female = yes }
    #        }
    #        if = {
    #            limit = {
    #                NOT = { $VICTIM$ = { has_trait = pregnant } }
    #            }
    #            add_to_variable_list = {
	#				name = potential_father_from_rape_variable_list
	#				target = $VICTIM$
    #			}
    #           if = {
    #                limit = {
    #                    $VICTIM$ = {
    #                        is_pregnant = no 
    #                        age < define:NChildbirth|MAX_FEMALE_REPRODUCTION_AGE
    #                    }
    #                }
    #                $VICTIM$ = {
    #                    random = {
    #                        chance = $PREGNANCY_CHANCE$
    #                        make_pregnant = {
    #                            father = scope:rapist 
    #                        }
    #                    }
    #                }
    #            }
    #        }
    #    }
    #}
}

